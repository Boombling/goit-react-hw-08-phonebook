{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selector.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactSuccess","addContactsError","addContactRequest","changeFilter","deleteContactSuccess","deleteContactsError","deleteContactRequest","submit","name","number","dispatch","a","item","actions","axios","post","data","message","deletedContact","contactId","delete","then","catch","error","fetchContacts","get","getValue","state","contacts","filter","getVisibleContact","createSelector","items","filterLowerCase","toLowerCase","includes","createReducer","_","payload","map","contact","alert","id","combineReducers","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","isAuthenticated","defaults","baseURL","headers","common","Authorization","register","credentials","response","logIn","logOut","getCurrentUser","getState","persistedToken","auth","getIsAuthenticated","getUsername","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurretnUser","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitlist","store","configureStore","reducer","persistReducer","authReducer","phonebookReduser","devContacts","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6dc7712e.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"phonebook/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"phonebook/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"phonebook/fetchContactsError\");\r\n\r\nconst addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nconst addContactsError = createAction(\"phonebook/addContactsError\");\r\nconst addContactRequest = createAction(\"phonebook/addContactRequest\");\r\n\r\nconst changeFilter = createAction(\"phonebook/filter\");\r\n\r\nconst deleteContactSuccess = createAction(\"phonebook/deleteContactSuccess\");\r\nconst deleteContactsError = createAction(\"phonebook/deleteContactsError\");\r\nconst deleteContactRequest = createAction(\"phonebook/deleteContactRequest\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactsError,\r\n  deleteContactSuccess,\r\n  deleteContactsError,\r\n  deleteContactRequest,\r\n};","import axios from \"axios\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactsError(error.message)));\r\n};\r\n\r\nconst submit =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const item = { name, number };\r\n\r\n    dispatch(actions.addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post('/contacts', item);\r\n      dispatch(actions.addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.addContactsError(error.message));\r\n    }\r\n  };\r\n\r\nconst deletedContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactsError(error.message)));\r\n};\r\n\r\nexport default {\r\n  submit,\r\n  deletedContact,\r\n  fetchContacts,\r\n};","import { createSelector } from \"reselect\";\r\n\r\nconst getValue = (state) => state.contacts.filter;\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContact = createSelector(\r\n  [getValue, getAllContacts],\r\n  (filter, items) => {\r\n    const filterLowerCase = filter.toLowerCase();\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filterLowerCase)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getValue,\r\n  getVisibleContact,\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst {\r\n  fetchContactsSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) =>\r\n    state.map((contact) => contact.name).includes(payload.name)\r\n      ? alert(`${payload.name} is already in contacts.`)\r\n      : [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload })=> payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (_, { payload }) => payload,\r\n    [authActions.loginError]: (_, { payload }) => payload,\r\n    [authActions.logoutError]: (_, { payload }) => payload,\r\n    [authActions.getCurrentUserError]: (_, {payload}) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n});","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = ' ';\r\n    },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n\r\n        token.set(response.data.token)\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    }\r\n    catch (error){\r\n        dispatch(authActions.registerError(error.message));\r\n    }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n\r\n        token.set(response.data.token)\r\n        dispatch(authActions.loginSuccess(response.data))\r\n    }\r\n    catch (error) {\r\n        dispatch (authActions.loginError(error.message))\r\n    }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    try {\r\n        await axios.post('/users/logout');\r\n        \r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess())\r\n    }\r\n    catch (error) {\r\n        dispatch (authActions.logoutError(error.message))\r\n    }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n    token.set(persistedToken)\r\n\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users/current')\r\n        dispatch(authActions.getCurrentUserSuccess(response.data))\r\n    }\r\n    catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message))\r\n    }\r\n};\r\n\r\n\r\nexport default {register, logIn, logOut, getCurrentUser}","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n\r\n    {isAuthenticated && <NavLink\r\n      to=\"/phonebook\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Контакти\r\n    </NavLink>}\r\n  </nav>\r\n);\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/default-avatar.566eacd7.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","  \r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from './components/AppBar';\r\n// import ContactsView from './views/ContactsView';\r\n// import HomeView from './views/HomeView';\r\n// import RegisterView from './views/RegisterView';\r\n// import LoginView from './views/LoginView';\r\nimport { authOperations } from './redux/auth';\r\nimport { connect } from 'react-redux';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'))\r\nconst RegisterView = lazy(() => import('./views/RegisterView'))\r\nconst LoginView = lazy(() => import('./views/LoginView'))\r\nconst ContactsView = lazy(() => import('./views/ContactsView'))\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurretnUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <AppBar />\r\n\r\n        <Suspense fallback={<p>...Load</p>}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\" component={HomeView} />\r\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/phonebook\" component={RegisterView} />\r\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/phonebook\" component={LoginView} />\r\n          <PrivateRoute path=\"/phonebook\"  redirectTo=\"/login\" component={ContactsView} />\r\n          </Switch>\r\n          </Suspense>\r\n      </>  \r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurretnUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n// import logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { phonebookReduser } from './phonebook';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitlist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: phonebookReduser,\r\n  },\r\n  middleware,\r\n  devContacts: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}